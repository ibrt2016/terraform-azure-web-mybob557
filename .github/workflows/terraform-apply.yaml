name: 'Terraform Apply'

on:
  pull_request_review:
    types:
      - submitted
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  terraform-apply:
    name: 'Terraform Apply'
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Inform on PR that Apply is Running
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GH_PAT }}
          message: |
            ***Running terraform apply***
            Results will display here momentarily...
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan

      - name: Reformat Plan
        if: steps.plan.outcome == 'success'
        run: echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt
      - name: Put Plan in Env Var
        if: steps.plan.outcome == 'success'
        run: |
          PLAN=$(cat plan.txt)
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Terraform Apply
        id: apply
        continue-on-error: true
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve -input=false -no-color tfplan

      - name: Post Plan and Apply to GitHub PR
        if: steps.plan.outcome == 'success' && steps.apply.outcome == 'success'
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GH_PAT }}
          message: |
            Applying **Infra**:
            <details><summary>Show Apply</summary>
            ```
            ${{ steps.apply.outputs.stdout }}
            ```
            </details>
      - name: Post Plan Failure
        if: steps.plan.outcome == 'failure'
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GH_PAT }}
          message: |
            Plan failed for **Infra**:
            <details><summary>Show Plan Fail</summary>
            ```
            ${{ steps.plan.outputs.stderr }}
            ```
            </details>
          message-failure: |
            Terraform Plan failed!
      - name: Post Apply Failure
        if: steps.apply.outcome == 'failure'
        uses: mshick/add-pr-comment@v2
        with:
          repo-token: ${{ secrets.GH_PAT }}
          message: |
            Apply failed for **Infra**:
            <details><summary>Show Apply Fail</summary>
            ```
            ${{ steps.apply.outputs.stderr }}
            ```
            </details>
          message-failure: |
            Terraform Apply failed!